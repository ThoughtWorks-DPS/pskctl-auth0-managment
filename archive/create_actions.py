import requests
import time
import os
import json
import sys

ACTION = 'set-claims-as-github-teams'

# read access_token from ephemeral (generated by pipeline) file
with open('access_token', 'r') as file:
    auth_token = file.read().rstrip()

# setup endpoint parameters
header = {
  "Authorization": f"Bearer {auth_token}",
  'Accept': 'application/json'
}
url = f"https://{os.environ.get('TENANT')}.us.auth0.com/api/v2/actions/actions"
with open('request-body/create-action-body.json', 'r') as file:
    body = json.load(file)

# create or patch auth0.action
response = requests.get(url, headers=header)
for app in response.json()['actions']:
    if app['name'] == ACTION:
        print(f"{ACTION} exists: patching...")
        try:
          patch_result = requests.patch(f"{url}/{app['id']}", headers=header, json=body)
          patch_result.raise_for_status()

          # if you cann deploy very quickly after a patch it fails with 400
          time.sleep(10)

          deploy_result = requests.post(f"{url}/{app['id']}/deploy", headers=header, data={})
          deploy_result.raise_for_status()
        except requests.exceptions.HTTPError as err:
          print({err.args[0]})

# request parameters

# body = json.load(open('request-body/create-action-body.json'))

# # set cli application name
# body['name'] = os.environ.get('TENANT_APPLICATION')

# # check if the application exists
# response = requests.get(url, headers=header)
# applications = [app['name'] for app in response.json()]

# if os.environ.get('TENANT_APPLICATION') in applications:
#   # application definition already exists, use PATCH
#   for app in response.json():
#     if app['name'] == os.environ.get('TENANT_APPLICATION'):
#       response = requests.patch(f"{url}/{app['client_id']}", headers=header, json=body)

# else:
#   # application definition does not exist, use POST
#   response = requests.post(url, headers=header, json=body)


# {
#   "name": "set-claims-as-github-teams",
#   "supported_triggers": [
#     {
#       "id": "post-login",
#       "version": "v3",
#     }
#   ],
#   "code": "string",
#   "dependencies": [
#     {
#       "name": "axios",
#       "version": "1.4.0"
#     },
#     {
#         "name": "auth0",
#         "version": "3.6.0"
#     }
#   ],
#   "runtime": "node18-actions",
#   "secrets": [
#     {
#       "name": "MANAGEMENT_API_CLIENT_ID",
#       "value": "$MANAGEMENT_API_CLIENT_ID"
#     },
#     {
#       "name": "MANAGEMENT_API_CLIENT_SECRET",
#       "value": "$MANAGEMENT_API_CLIENT_SECRET"
#     }
#   ]
# }